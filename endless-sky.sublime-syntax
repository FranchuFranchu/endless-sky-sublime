%YAML 1.2
---
name: Endless Sky
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - txt
scope: source.endless-sky

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  main:
    # The main context is the initial starting point of our syntax.
    - match: '(to|on|not|neighbour)' # This are multiple-words keywords, such as "to offer", or "on complete"
      scope: keyword.control.endless-sky
    - match: '^\w+'
      scope: support.type.endless-sky # In the beggining of the line "planet Earth" is highlighted blue
      push: value # Expect a value
    - match: '\w+'
      scope: keyword.control.endless-sky
      push: value
    - include: string_detection
  string_detection:
    - match: ' "'
      push: string
    - match: '"'
      push: string
    - match: '`'
      push: bstring
    - match: ' `'
      push: bstring
  value:

    - include: string_detection
    - match: " (-)?[0-9.]+" # Number
      scope: constant.numeric.endless-sky
    - match: "(-)?[0-9.]+" # Number
      scope: constant.numeric.endless-sky
    - match: ' ' # Non-quoted string
      push: implicit_string
    - match: '( +)\w+'
      scope: keyword.control.endless-sky
    - match: $\n? # End of line
      pop: true
    - match: '.'
      scope: string.unquoted.endless-sky
  implicit_string:
    - meta_scope: string.unquoted.endless-sky
    - match: ' '
      pop: true
    - match: $\n?
      pop: true
  string:

    - meta_scope: string.quoted.double.endless-sky
    - match: \\.
      scope: constant.character.escape.endless-sky
    - match: '"'
      pop: true
  bstring: # Backtick string
    - meta_scope: string.quoted.backtick.endless-sky
    - match: \\.
      scope: constant.character.escape.endless-sky

    - match: '`'
      pop: true